@model List<Sistema_Tea.Models.CARS2_Sesion>

@{
    ViewData["Title"] = "Listado de Sesiones CARS-2";
}
<link rel="stylesheet" href="~/css/InTest.css" asp-append-version="true" />

<div class="emind-list-container">
    <div class="emind-list-header">
        <h1><i class="bi bi-card-checklist"></i> @ViewData["Title"]</h1>
        <a asp-controller="Cars2" asp-action="CrearSesion" class="btn emind-btn-primary">
            <i class="bi bi-plus-circle-fill"></i>Nueva Sesión CARS-2
        </a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-emind alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-emind alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model == null || !Model.Any())
    {
        <div class="text-center p-4 p-md-5 my-4 empty-state-container">
            <i class="bi bi-journal-bookmark-fill"></i>
            <h4 class="mt-3">No hay sesiones CARS-2 registradas.</h4>
            <p>Puedes asignar una nueva sesión haciendo clic en "Nueva Sesión CARS-2".</p>
        </div>
    }
    else
    {
        <div class="emind-table-wrapper">
            <div class="table-responsive-custom">
                <table class="table emind-table" id="tablaSesionesCars2">
                    <thead>
                        <tr>
                            <th>Paciente</th>
                            <th>Psicólogo Evaluador</th>
                            <th class="text-center">Versión CARS</th>
                            <th>Fechas</th>
                            <th class="text-center">Estado</th>
                            <th class="text-end">Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var sesion in Model)
                        {
                            string nombreCompletoPaciente = $"{sesion.Paciente?.Nombre} {sesion.Paciente?.Apellidos}".Trim();
                            string nombreCompletoPsicologo = sesion.Psicologo?.NombreCompleto?.Trim() ?? "N/A";
                            <tr>
                                <td data-label="Paciente:">
                                    <div class="d-flex align-items-center">
                                        <span class="avatar-initials" title="@nombreCompletoPaciente">
                                            @(!string.IsNullOrEmpty(sesion.Paciente?.Nombre) ? sesion.Paciente.Nombre[0].ToString().ToUpper() : "")@(!string.IsNullOrEmpty(sesion.Paciente?.Apellidos) ? sesion.Paciente.Apellidos[0].ToString().ToUpper() : "P")
                                        </span>
                                        <div>
                                            <span class="data-main text-truncate-custom" title="@nombreCompletoPaciente">@nombreCompletoPaciente</span>
                                            @if (!string.IsNullOrEmpty(sesion.Paciente?.Dui))
                                            {
                                                <span class="data-sub">DUI Pac.: @sesion.Paciente.Dui</span>
                                            }
                                        </div>
                                    </div>
                                </td>
                                <td data-label="Psicólogo:">
                                    <div class="d-flex align-items-center">
                                        <span class="avatar-initials" title="@nombreCompletoPsicologo">
                                            @(!string.IsNullOrEmpty(nombreCompletoPsicologo) && nombreCompletoPsicologo != "N/A" && nombreCompletoPsicologo.Contains(' ') ? $"{nombreCompletoPsicologo.Split(' ')[0][0]}{nombreCompletoPsicologo.Split(' ').Last()[0]}".ToUpper() : (!string.IsNullOrEmpty(nombreCompletoPsicologo) && nombreCompletoPsicologo != "N/A" ? nombreCompletoPsicologo.Substring(0, Math.Min(2, nombreCompletoPsicologo.Length)).ToUpper() : "Psi"))
                                        </span>
                                        <div>
                                            <span class="data-main text-truncate-custom" title="@nombreCompletoPsicologo">@nombreCompletoPsicologo</span>
                                        </div>
                                    </div>
                                </td>
                                <td data-label="Versión:" class="text-center">
                                    <span class="data-main version-cars-text">CARS-2 @sesion.VersionCARS</span>
                                </td>
                                <td data-label="Fechas:">
                                    <span class="data-main">@(sesion.FechaInicio != DateTime.MinValue ? sesion.FechaInicio.ToString("dd/MM/yy HH:mm") : "-")</span>
                                    @if (sesion.FechaFin.HasValue && sesion.FechaFin.Value != DateTime.MinValue)
                                    {
                                        <span class="data-sub">Fin: @sesion.FechaFin.Value.ToString("dd/MM/yy HH:mm")</span>
                                    }
                                    else if (sesion.Estado?.ToLower().Replace(" ", "") != "completado" && sesion.Estado?.ToLower().Replace(" ", "") != "cancelado")
                                    {
                                        <span class="data-sub text-muted"><em>(Sin finalizar)</em></span>
                                    }
                                </td>
                                <td data-label="Estado:" class="text-center">
                                    @{
                                        string badgeClass = "badge-status-pendiente";
                                        string estadoOriginal = sesion.Estado?.Trim() ?? "Indefinido";
                                        string estadoNormalizado = estadoOriginal.ToLower().Replace(" ", "");
                                        string estadoDisplay = System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(estadoOriginal.ToLower());

                                        switch (estadoNormalizado)
                                        {
                                            case "pendiente": badgeClass = "badge-status-pendiente"; break;
                                            case "enprogreso": badgeClass = "badge-status-enprogreso"; break;
                                            case "pausado": badgeClass = "badge-status-pausado"; break;
                                            case "completado": badgeClass = "badge-status-completado"; break;
                                            case "cancelado": badgeClass = "badge-status-cancelado"; break;
                                        }
                                    }
                                    <span class="badge-status @badgeClass">@estadoDisplay</span>
                                </td>
                                <td data-label="Acciones:">
                                    <div class="action-btn-group">
                                        @switch (sesion.Estado?.ToLower().Replace(" ", ""))
                                        {
                                            case "pendiente":
                                                <a asp-controller="Cars2" asp-action="IniciarEvaluacionCARS2" asp-route-sesionId="@sesion.SesionID" class="btn action-btn action-iniciar" title="Iniciar Evaluación">
                                                    <i class="bi bi-play-circle-fill"></i> Iniciar
                                                </a>
                                                <a href="#" class="btn action-btn action-cancelar" title="Cancelar Sesión"
                                                   data-bs-toggle="modal" data-bs-target="#cancelarModalCARS2"
                                                   data-sesionid="@sesion.SesionID" data-pacientenombre="@nombreCompletoPaciente">
                                                    <i class="bi bi-x-lg"></i>
                                                </a>
                                                break;
                                            case "enprogreso":
                                                <a asp-controller="Cars2" asp-action="PuntuarItemsCARS2" asp-route-sesionId="@sesion.SesionID" class="btn action-btn action-puntuar" title="Puntuar Ítems CARS-2">
                                                    <i class="bi bi-pencil-square"></i> Puntuar
                                                </a>
                                                <a asp-controller="Cars2" asp-action="PausarSesion" asp-route-id="@sesion.SesionID" class="btn action-btn action-pausar" title="Pausar Sesión">
                                                    <i class="bi bi-pause-circle-fill"></i>
                                                </a>
                                                break;
                                            case "pausado":
                                                <a asp-controller="Cars2" asp-action="ReanudarSesion" asp-route-id="@sesion.SesionID" class="btn action-btn action-reanudar" title="Reanudar Evaluación">
                                                    <i class="bi bi-play-fill"></i> Reanudar
                                                </a>
                                                <a href="#" class="btn action-btn action-cancelar" title="Cancelar Sesión"
                                                   data-bs-toggle="modal" data-bs-target="#cancelarModalCARS2"
                                                   data-sesionid="@sesion.SesionID" data-pacientenombre="@nombreCompletoPaciente">
                                                    <i class="bi bi-x-lg"></i>
                                                </a>
                                                break;
                                            case "completado":
                                                <a asp-controller="Cars2" asp-action="ResultadoSesionCARS2" asp-route-sesionId="@sesion.SesionID" class="btn action-btn action-resultado" title="Ver Resultado CARS-2">
                                                    <i class="bi bi-clipboard2-data-fill"></i> Resultado
                                                </a>
                                                <a asp-controller="Cars2" asp-action="VerQPCyNotas" asp-route-sesionId="@sesion.SesionID" class="btn action-btn action-notas" title="Ver QPC y Notas">
                                                    <i class="bi bi-journals"></i> QPC/Notas
                                                </a>
                                                break;
                                            case "cancelado":
                                                <a asp-controller="Cars2" asp-action="MotivoCancelacionSesion" asp-route-sesionId="@sesion.SesionID" class="btn action-btn action-motivo" title="Ver Motivo de Cancelación">
                                                    <i class="bi bi-info-circle-fill"></i> Motivo
                                                </a>
                                                break;
                                        }
                                        <a asp-controller="Cars2" asp-action="DetalleSesion" asp-route-id="@sesion.SesionID" class="btn action-btn action-detalles" title="Más Información">
                                            <i class="bi bi-eye-fill"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

<div class="modal fade" id="cancelarModalCARS2" tabindex="-1" aria-labelledby="cancelarModalCARS2Label" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form id="formCancelarSesionCARS2" asp-controller="Cars2" asp-action="CancelarSesionConfirmado" method="post">
                <div class="modal-header">
                    <h5 class="modal-title" id="cancelarModalCARS2Label"><i class="bi bi-exclamation-triangle-fill text-danger me-2"></i>Confirmar Cancelación</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <p>¿Estás seguro de que deseas cancelar la sesión CARS-2 para el paciente <strong id="modalPacienteNombreCARS2"></strong>?</p>
                    <p class="text-muted small">Esta acción marcará la sesión como 'Cancelada'.</p>
                    <input type="hidden" name="sesionId" id="modalSesionIdCARS2" />
                    <div class="mb-3">
                        <label for="modalMotivoCancelacionCARS2" class="form-label fw-semibold">Motivo de la cancelación (requerido):</label>
                        <textarea class="form-control" id="modalMotivoCancelacionCARS2" name="motivoCancelacion" rows="3" required></textarea>
                        <div class="invalid-feedback">Por favor, ingrese un motivo para la cancelación.</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No, mantener</button>
                    <button type="submit" class="btn btn-danger">Sí, cancelar sesión</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const cancelarModalElementCARS2 = document.getElementById('cancelarModalCARS2');
            if (cancelarModalElementCARS2) {
                const inputSesionIdCancelarCARS2 = document.getElementById('modalSesionIdCARS2');
                const nombrePacienteSpanCARS2 = document.getElementById('modalPacienteNombreCARS2');
                const formCancelarCARS2 = document.getElementById('formCancelarSesionCARS2');

                document.querySelectorAll('.action-btn[data-bs-target="#cancelarModalCARS2"]').forEach(btn => {
                    btn.addEventListener('click', function (event) {
                        const id = this.getAttribute('data-sesionid');
                        const nombre = this.getAttribute('data-pacientenombre');
                        if(inputSesionIdCancelarCARS2) inputSesionIdCancelarCARS2.value = id;
                        if(nombrePacienteSpanCARS2) nombrePacienteSpanCARS2.textContent = nombre;
                    });
                });

                if(formCancelarCARS2) {
                    formCancelarCARS2.addEventListener('submit', function(event) {
                        if (!formCancelarCARS2.checkValidity()) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        formCancelarCARS2.classList.add('was-validated');
                    });
                }
            }

            @{
                    var successMessage = TempData["SuccessMessage"] as string;
                    var errorMessage = TempData["ErrorMessage"] as string;
            }

            @if (!string.IsNullOrEmpty(successMessage))
            {
                    <text>
                    Swal.fire({
                        icon: 'success', title: '¡Éxito!',
                        text: '@Html.Raw(System.Text.Encodings.Web.JavaScriptEncoder.Default.Encode(successMessage))',
                        confirmButtonColor: 'var(--emind-primary)', timer: 3000, timerProgressBar: true,
                        toast: true, position: 'top-end', showConfirmButton: false
                    });
                    </text>
            }
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                    <text>
                    Swal.fire({
                        icon: 'error', title: 'Error',
                        text: '@Html.Raw(System.Text.Encodings.Web.JavaScriptEncoder.Default.Encode(errorMessage))',
                        confirmButtonColor: 'var(--emind-danger)', timer: 4500, timerProgressBar: true,
                        toast: true, position: 'top-end', showConfirmButton: false
                    });
                    </text>
            }
        });
    </script>
}