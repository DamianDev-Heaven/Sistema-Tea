@model Sistema_Tea.Models.Paciente

@{
    ViewData["Title"] = "Editar Paciente";
}

<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
<link rel="stylesheet" href="~/css/ListarPsi.css" asp-append-version="true" />

<div class="psych-list-container">
    <div class="psych-list-header">
        <h2><i class="bi bi-person-fill-gear me-2"></i>Editar Paciente</h2>
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> Volver a la lista de pacientes
        </a>
    </div>

    <div class="card shadow-sm p-4 mt-4">
        <div class="card-body">
            <form asp-action="Edit" asp-controller="Paciente" method="post" id="formPaciente">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <input type="hidden" asp-for="PacienteID" />
                <input type="hidden" asp-for="TutorID" />

                <div class="row g-3">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Nombre" class="form-label fw-semibold text-primary"></label>
                            <input asp-for="Nombre" class="form-control" id="pacienteNombre" />
                            <span asp-validation-for="Nombre" class="text-danger"></span>
                            <div class="invalid-feedback" id="errorPacienteNombre"></div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Apellidos" class="form-label fw-semibold text-primary"></label>
                            <input asp-for="Apellidos" class="form-control" id="pacienteApellidos" />
                            <span asp-validation-for="Apellidos" class="text-danger"></span>
                            <div class="invalid-feedback" id="errorPacienteApellidos"></div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="FechaNacimiento" class="form-label fw-semibold text-primary"></label>
                            <input asp-for="FechaNacimiento" type="date" class="form-control" id="pacienteFechaNacimiento" />
                            <span asp-validation-for="FechaNacimiento" class="text-danger"></span>
                            <div class="invalid-feedback" id="errorPacienteFechaNacimiento"></div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Dui" class="form-label fw-semibold text-primary"></label>
                            <input asp-for="Dui" class="form-control" placeholder="Opcional" id="pacienteDui" />
                            <span asp-validation-for="Dui" class="text-danger"></span>
                            <div class="invalid-feedback" id="errorPacienteDui"></div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Sexo" class="form-label fw-semibold text-primary"></label>
                            <select asp-for="Sexo" class="form-select" id="pacienteSexo">
                                <option value="">Seleccione...</option>
                                <option value="M">Masculino</option>
                                <option value="F">Femenino</option>
                                <option value="O">Otro</option>
                            </select>
                            <span asp-validation-for="Sexo" class="text-danger"></span>
                            <div class="invalid-feedback" id="errorPacienteSexo"></div>
                        </div>
                    </div>
                    <div class="col-md-6 d-flex align-items-center">
                        <div class="form-check">
                            <input class="form-check-input" asp-for="Activo" type="checkbox" id="pacienteActivo" />
                            <label class="form-check-label fw-semibold text-primary" asp-for="Activo"></label>
                        </div>
                    </div>
                </div>

                <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-save me-2"></i>Guardar Cambios
                    </button>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="bi bi-x-circle me-2"></i>Cancelar
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('formPaciente');

            const pacienteNombre = document.getElementById('pacienteNombre');
            const pacienteApellidos = document.getElementById('pacienteApellidos');
            const pacienteFechaNacimiento = document.getElementById('pacienteFechaNacimiento');
            const pacienteDui = document.getElementById('pacienteDui');
            const pacienteSexo = document.getElementById('pacienteSexo');

            const hoy = new Date();
            const fechaMaxPaciente = new Date(hoy.getFullYear(), hoy.getMonth(), hoy.getDate()); 
            fechaMaxPaciente.setMonth(fechaMaxPaciente.getMonth() - 18); 
            pacienteFechaNacimiento.max = fechaMaxPaciente.toISOString().split('T')[0];

            function showError(element, message) {
                element.classList.add('is-invalid');
                const errorDiv = document.getElementById('error' + element.id.replace('paciente', ''));
                if (errorDiv) {
                    errorDiv.textContent = message;
                }
            }

            function clearError(element) {
                element.classList.remove('is-invalid');
                const errorDiv = document.getElementById('error' + element.id.replace('paciente', ''));
                if (errorDiv) {
                    errorDiv.textContent = '';
                }
            }

            function validateText(element, fieldName) {
                const value = element.value.trim();
                if (value === '') {
                    showError(element, `El ${fieldName} es obligatorio.`);
                    return false;
                } else if (!/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\s]+$/.test(value)) {
                    showError(element, `El ${fieldName} solo puede contener letras.`);
                    return false;
                } else {
                    clearError(element);
                    return true;
                }
            }

            function validateDate(element, fieldName) {
                const value = element.value;
                if (value === '') {
                    showError(element, `La ${fieldName} es obligatoria.`);
                    return false;
                } else {
                    const selectedDate = new Date(value);
                    if (element.id === 'pacienteFechaNacimiento') {
                        if (selectedDate > fechaMaxPaciente) {
                            showError(element, `El paciente debe tener al menos 18 meses de edad.`);
                            return false;
                        }
                    }
                    clearError(element);
                    return true;
                }
            }

            function validateDui(element, fieldName) {
                const value = element.value.trim();
                if (value !== '' && !/^\d{9}$/.test(value)) {
                    showError(element, `El ${fieldName} debe tener 9 dígitos numéricos.`);
                    return false;
                } else {
                    clearError(element);
                    return true;
                }
            }

            function validateSexo(element, fieldName) {
                const value = element.value;
                if (value === '') {
                    showError(element, `El ${fieldName} es obligatorio.`);
                    return false;
                } else {
                    clearError(element);
                    return true;
                }
            }

            pacienteNombre.addEventListener('blur', () => validateText(pacienteNombre, 'nombre del paciente'));
            pacienteApellidos.addEventListener('blur', () => validateText(pacienteApellidos, 'apellido del paciente'));
            pacienteFechaNacimiento.addEventListener('blur', () => validateDate(pacienteFechaNacimiento, 'fecha de nacimiento del paciente'));
            pacienteDui.addEventListener('blur', () => validateDui(pacienteDui, 'DUI del paciente'));
            pacienteSexo.addEventListener('blur', () => validateSexo(pacienteSexo, 'sexo del paciente'));

            form.addEventListener('submit', function (event) {
                let isValid = true;

                isValid = validateText(pacienteNombre, 'nombre del paciente') && isValid;
                isValid = validateText(pacienteApellidos, 'apellido del paciente') && isValid;
                isValid = validateDate(pacienteFechaNacimiento, 'fecha de nacimiento del paciente') && isValid;
                isValid = validateSexo(pacienteSexo, 'sexo del paciente') && isValid;
                validateDui(pacienteDui, 'DUI del paciente'); 

                if (!isValid) {
                    event.preventDefault(); 
                }
            });
        });
    </script>
}