@model Sistema_Tea.Models.Tutor

@{
    ViewData["Title"] = "Editar Tutor";
}

<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
<link rel="stylesheet" href="~/css/ListarPsi.css" asp-append-version="true" />

<div class="psych-list-container">
    <div class="psych-list-header">
        <h2><i class="bi bi-person-circle me-2"></i>Editar Tutor</h2>
        <a asp-action="IndexTutor" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> Volver a la lista de tutores
        </a>
    </div>

    <div class="card shadow-sm p-4 mt-4">
        <div class="card-body">
            <form asp-action="EditTutor" method="post" id="formTutor">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <input type="hidden" asp-for="TutorID" />

                <div class="row g-3">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Nombre" class="form-label fw-semibold text-primary"></label>
                            <input asp-for="Nombre" class="form-control" id="tutorNombre" />
                            <span asp-validation-for="Nombre" class="text-danger"></span>
                            <div class="invalid-feedback" id="errorTutorNombre"></div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Apellidos" class="form-label fw-semibold text-primary"></label>
                            <input asp-for="Apellidos" class="form-control" id="tutorApellidos" />
                            <span asp-validation-for="Apellidos" class="text-danger"></span>
                            <div class="invalid-feedback" id="errorTutorApellidos"></div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="FechaNacimiento" class="form-label fw-semibold text-primary"></label>
                            <input asp-for="FechaNacimiento" type="date" class="form-control" id="tutorFechaNacimiento" />
                            <span asp-validation-for="FechaNacimiento" class="text-danger"></span>
                            <div class="invalid-feedback" id="errorTutorFechaNacimiento"></div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Dui" class="form-label fw-semibold text-primary"></label>
                            <input asp-for="Dui" class="form-control" id="tutorDui" />
                            <span asp-validation-for="Dui" class="text-danger"></span>
                            <div class="invalid-feedback" id="errorTutorDui"></div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Telefono" class="form-label fw-semibold text-primary"></label>
                            <input asp-for="Telefono" class="form-control" id="tutorTelefono" placeholder="Ej: 1234 5678" />
                            <span asp-validation-for="Telefono" class="text-danger"></span>
                            <div class="invalid-feedback" id="errorTutorTelefono"></div>
                        </div>
                    </div>
                    <div class="col-md-6 d-flex align-items-center">
                        <div class="form-check">
                            <input class="form-check-input" asp-for="Activo" type="checkbox" id="tutorActivo" />
                            <label class="form-check-label fw-semibold text-primary" asp-for="Activo"></label>
                        </div>
                    </div>
                </div>

                <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-save me-2"></i> Guardar Cambios
                    </button>
                    <a asp-action="IndexTutor" class="btn btn-secondary">
                        <i class="bi bi-x-circle me-2"></i> Cancelar
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('formTutor');

            const tutorNombre = document.getElementById('tutorNombre');
            const tutorApellidos = document.getElementById('tutorApellidos');
            const tutorFechaNacimiento = document.getElementById('tutorFechaNacimiento');
            const tutorDui = document.getElementById('tutorDui');
            const tutorTelefono = document.getElementById('tutorTelefono');

			// Establecer la fecha máxima de nacimiento del tutor (18 años atrás)
            const hoy = new Date();
            const fechaMaxTutor = new Date(hoy.getFullYear() - 18, hoy.getMonth(), hoy.getDate());
            tutorFechaNacimiento.max = fechaMaxTutor.toISOString().split('T')[0];

            function showError(element, message) {
                element.classList.add('is-invalid');
                const errorDiv = document.getElementById('error' + element.id.replace('tutor', ''));
                if (errorDiv) {
                    errorDiv.textContent = message;
                }
            }

            function clearError(element) {
                element.classList.remove('is-invalid');
                const errorDiv = document.getElementById('error' + element.id.replace('tutor', ''));
                if (errorDiv) {
                    errorDiv.textContent = '';
                }
            }

			// Valida texto (nombre y apellidos del tutor)
            function validateText(element, fieldName) {
                const value = element.value.trim();
                if (value === '') {
                    showError(element, `El ${fieldName} es obligatorio.`);
                    return false;
                } else if (!/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\s]+$/.test(value)) {
                    showError(element, `El ${fieldName} solo puede contener letras.`);
                    return false;
                } else {
                    clearError(element);
                    return true;
                }
            }

			// Valida fecha de nacimiento (tutor debe tener al menos 18 años)
            function validateDate(element, fieldName) {
                const value = element.value;
                if (value === '') {
                    showError(element, `La ${fieldName} es obligatoria.`);
                    return false;
                } else {
                    const selectedDate = new Date(value);
                    if (element.id === 'tutorFechaNacimiento') {
                        if (selectedDate > fechaMaxTutor) {
                            showError(element, `El tutor debe tener al menos 18 años de edad.`);
                            return false;
                        }
                    }
                    clearError(element);
                    return true;
                }
            }

            // Validar DUI (9 dígitos)
            function validateDui(element, fieldName) {
                const value = element.value.trim();
                if (value === '') {
                    showError(element, `El ${fieldName} es obligatorio.`);
                    return false;
                } else if (!/^\d{9}$/.test(value)) {
                    showError(element, `El ${fieldName} debe tener 9 dígitos numéricos.`);
                    return false;
                } else {
                    clearError(element);
                    return true;
                }
            }

            // Validar teléfono (formato xxxx xxxx)
            function validateTelefono(element, fieldName) {
                const value = element.value.trim();
                // Regex: 4 digits, optional space, 4 digits. Allows for 1234 5678 or 12345678
                if (value !== '' && !/^\d{4}\s?\d{4}$/.test(value)) {
                    showError(element, `El ${fieldName} debe tener el formato xxxx xxxx (8 dígitos).`);
                    return false;
                } else {
                    clearError(element);
                    return true;
                }
            }

            tutorNombre.addEventListener('blur', () => validateText(tutorNombre, 'nombre del tutor'));
            tutorApellidos.addEventListener('blur', () => validateText(tutorApellidos, 'apellido del tutor'));
            tutorFechaNacimiento.addEventListener('blur', () => validateDate(tutorFechaNacimiento, 'fecha de nacimiento del tutor'));
            tutorDui.addEventListener('blur', () => validateDui(tutorDui, 'DUI del tutor'));
            tutorTelefono.addEventListener('blur', () => validateTelefono(tutorTelefono, 'teléfono del tutor'));

            // Validar todo el formulario al enviar
            form.addEventListener('submit', function (event) {
                let isValid = true;

                isValid = validateText(tutorNombre, 'nombre del tutor') && isValid;
                isValid = validateText(tutorApellidos, 'apellido del tutor') && isValid;
                isValid = validateDate(tutorFechaNacimiento, 'fecha de nacimiento del tutor') && isValid;
                isValid = validateDui(tutorDui, 'DUI del tutor') && isValid;
                isValid = validateTelefono(tutorTelefono, 'teléfono del tutor') && isValid; 

                if (!isValid) {
                    event.preventDefault();
                }
            });
        });
    </script>
}