@model List<Sistema_Tea.Models.ADOS2_Sesion>
@{
    ViewData["Title"] = "Listado de Sesiones ADOS-2";
}
<link rel="stylesheet" href="~/css/InTest.css" asp-append-version="true" />

<div class="emind-list-container">
    <div class="emind-list-header">
        <h1><i class="bi bi-puzzle-fill"></i> @ViewData["Title"]</h1>
        <a asp-controller="Ados2" asp-action="CrearSesion" class="btn emind-btn-primary">
            <i class="bi bi-plus-circle-fill"></i>Nueva Sesión ADOS-2
        </a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-emind alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-emind alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model == null || !Model.Any())
    {
        <div class="text-center p-4 p-md-5 my-4 empty-state-container">
            <i class="bi bi-folder-x"></i>
            <h4 class="mt-3">No hay sesiones ADOS-2 registradas.</h4>
            <p>Puedes asignar una nueva sesión haciendo clic en "Nueva Sesión ADOS-2".</p>
        </div>
    }
    else
    {
        <div class="emind-table-wrapper">
            <div class="table-responsive-custom">
                <table class="table emind-table" id="tablaSesionesAdos2">
                    <thead>
                        <tr>
                            <th>Paciente</th>
                            <th>Psicólogo Evaluador</th>
                            <th class="text-center">Módulo</th>
                            <th>Fechas</th>
                            <th class="text-center">Estado</th>
                            <th class="text-end">Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var sesion in Model)
                        {
                            string nombreCompletoPaciente = $"{sesion.Paciente?.Nombre} {sesion.Paciente?.Apellidos}".Trim();
                            string nombreCompletoPsicologo = sesion.Psicologo?.NombreCompleto?.Trim() ?? "N/A";
                            <tr>
                                <td data-label="Paciente:">
                                    <div class="d-flex align-items-center">
                                        <span class="avatar-initials" title="@nombreCompletoPaciente">
                                            @(!string.IsNullOrEmpty(sesion.Paciente?.Nombre) ? sesion.Paciente.Nombre[0].ToString().ToUpper() : "")@(!string.IsNullOrEmpty(sesion.Paciente?.Apellidos) ? sesion.Paciente.Apellidos[0].ToString().ToUpper() : "P")
                                        </span>
                                        <div>
                                            <span class="data-main text-truncate-custom" title="@nombreCompletoPaciente">@nombreCompletoPaciente</span>
                                            @if (!string.IsNullOrEmpty(sesion.Paciente?.Dui))
                                            {
                                                <span class="data-sub">DUI Pac.: @sesion.Paciente.Dui</span>
                                            }
                                        </div>
                                    </div>
                                </td>
                                <td data-label="Psicólogo:">
                                    <div class="d-flex align-items-center">
                                        <span class="avatar-initials" title="@nombreCompletoPsicologo">
                                            @(!string.IsNullOrEmpty(nombreCompletoPsicologo) && nombreCompletoPsicologo != "N/A" && nombreCompletoPsicologo.Contains(' ') ? $"{nombreCompletoPsicologo.Split(' ')[0][0]}{nombreCompletoPsicologo.Split(' ').Last()[0]}".ToUpper() : (!string.IsNullOrEmpty(nombreCompletoPsicologo) && nombreCompletoPsicologo != "N/A" ? nombreCompletoPsicologo.Substring(0, Math.Min(2, nombreCompletoPsicologo.Length)).ToUpper() : "Psi"))
                                        </span>
                                        <div>
                                            <span class="data-main text-truncate-custom" title="@nombreCompletoPsicologo">@nombreCompletoPsicologo</span>
                                        </div>
                                    </div>
                                </td>
                                <td data-label="Módulo:" class="text-center">
                                    <span class="data-main modulo-text">@sesion.Modulo</span>
                                </td>
                                <td data-label="Fechas:">
                                    <span class="data-main">@(sesion.FechaInicio != DateTime.MinValue ? sesion.FechaInicio.ToString("dd/MM/yy HH:mm") : "-")</span>
                                    @if (sesion.FechaFin.HasValue && sesion.FechaFin.Value != DateTime.MinValue)
                                    {
                                        <span class="data-sub">Fin: @sesion.FechaFin.Value.ToString("dd/MM/yy HH:mm")</span>
                                    }
                                    else if (sesion.Estado?.ToLower().Replace(" ", "") != "completado" && sesion.Estado?.ToLower().Replace(" ", "") != "cancelado")
                                    {
                                        <span class="data-sub text-muted"><em>(Sin finalizar)</em></span>
                                    }
                                </td>
                                <td data-label="Estado:" class="text-center">
                                    @{
                                        string badgeClass = "badge-status-pendiente";
                                        string estadoOriginal = sesion.Estado?.Trim() ?? "Indefinido";
                                        string estadoNormalizado = estadoOriginal.ToLower().Replace(" ", "");
                                        string estadoDisplay = System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(estadoOriginal.ToLower());

                                        switch (estadoNormalizado)
                                        {
                                            case "pendiente": badgeClass = "badge-status-pendiente"; break;
                                            case "enprogreso": badgeClass = "badge-status-enprogreso"; break;
                                            case "pausado": badgeClass = "badge-status-pausado"; break;
                                            case "completado": badgeClass = "badge-status-completado"; break;
                                            case "cancelado": badgeClass = "badge-status-cancelado"; break;
                                        }
                                    }
                                    <span class="badge-status @badgeClass">@estadoDisplay</span>
                                </td>
                                <td data-label="Acciones:">
                                    <div class="action-btn-group">
                                        @switch (sesion.Estado?.ToLower().Replace(" ", ""))
                                        {
                                            case "pendiente":
                                                <a asp-controller="Ados2" asp-action="IniciarTestADOS2" asp-route-id="@sesion.SesionID" class="btn action-btn action-iniciar" title="Iniciar Test">
                                                    <i class="bi bi-play-circle-fill"></i> Iniciar
                                                </a>
                                                <a href="#" class="btn action-btn action-cancelar" title="Cancelar Sesión"
                                                   data-bs-toggle="modal" data-bs-target="#cancelarModalADOS2"
                                                   data-sesionid="@sesion.SesionID" data-pacientenombre="@nombreCompletoPaciente">
                                                    <i class="bi bi-x-lg"></i>
                                                </a>
                                                break;
                                            case "enprogreso":
                                                <a asp-controller="Ados2" asp-action="ReanudarSesion" asp-route-id="@sesion.SesionID" class="btn action-btn action-reanudar" title="Reanudar Sesión">
                                                    <i class="bi bi-play-fill"></i> Reanudar
                                                </a>
                                                <a href="#"
                                                   class="btn action-btn action-pausar"
                                                   title="Pausar Sesión"
                                                   data-bs-toggle="modal"
                                                   data-bs-target="#pausarModalADOS2"
                                                   data-sesionid="@sesion.SesionID"
                                                   data-pacientenombre="@sesion.Paciente.NombreCompleto">
                                                    <i class="bi bi-pause-circle-fill"></i>
                                                </a>
                                                break;
                                            case "pausado":
                                                <a asp-controller="Ados2" asp-action="ReanudarSesion" asp-route-id="@sesion.SesionID" class="btn action-btn action-reanudar" title="Reanudar Sesión">
                                                    <i class="bi bi-play-fill"></i> Reanudar
                                                </a>
                                                <a href="#" class="btn action-btn action-cancelar" title="Cancelar Sesión"
                                                   data-bs-toggle="modal" data-bs-target="#cancelarModalADOS2"
                                                   data-sesionid="@sesion.SesionID" data-pacientenombre="@nombreCompletoPaciente">
                                                    <i class="bi bi-x-lg"></i>
                                                </a>
                                                <a href="#" class="btn action-btn action-motivo" title="Ver Motivo de Pausa"
                                                   data-bs-toggle="modal" data-bs-target="#motivoPausaModal"
                                                   data-pacientenombre="@nombreCompletoPaciente"
                                                   data-motivopausa="@sesion.MotivoPausaCancelacion">
                                                    <i class="bi bi-info-circle-fill"></i> Motivo
                                                </a>
                                                break;
                                            case "completado":
                                                <a asp-controller="Ados2" asp-action="Resultados" asp-route-sesionId="@sesion.SesionID" class="btn action-btn action-resultado" title="Ver Resultado">
                                                    <i class="bi bi-clipboard2-data-fill"></i> Resultado
                                                </a>

                                                @if (string.IsNullOrWhiteSpace(sesion.NotasGeneralesSesion))
                                                {
                                                    <a href="#" class="btn action-btn action-agregar-nota" title="Agregar Nota General"
                                                       data-bs-toggle="modal" data-bs-target="#agregarNotaModal"
                                                       data-sesionid="@sesion.SesionID" data-pacientenombre="@nombreCompletoPaciente">
                                                        <i class="bi bi-journal-plus"></i> Nota
                                                    </a>
                                                }
                                                else
                                                {
                                                    <a href="#" class="btn action-btn action-ver-nota" title="Ver Nota General"
                                                       data-bs-toggle="modal" data-bs-target="#verNotaModal"
                                                       data-pacientenombre="@nombreCompletoPaciente"
                                                       data-notageneral="@sesion.NotasGeneralesSesion">
                                                        <i class="bi bi-journal-text"></i> Ver Nota
                                                    </a>
                                                }
                                                break;
                                            case "cancelado":
                                                <a href="#" class="btn action-btn action-motivo" title="Ver Motivo de Cancelación"
                                                   data-bs-toggle="modal" data-bs-target="#motivoCancelacionModal"
                                                   data-pacientenombre="@nombreCompletoPaciente"
                                                   data-motivocancelacion="@sesion.MotivoPausaCancelacion">
                                                    <i class="bi bi-info-circle-fill"></i> Motivo
                                                </a>
                                                break;
                                        }
                                        @* <a asp-controller="Ados2" asp-action="DetalleSesion" asp-route-id="@sesion.SesionID" class="btn action-btn action-detalles" title="Más Información">
                                            <i class="bi bi-eye-fill"></i>
                                        </a> *@
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

<div class="modal fade" id="cancelarModalADOS2" tabindex="-1" aria-labelledby="cancelarModalADOS2Label" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form id="formCancelarSesionADOS2" asp-controller="Ados2" asp-action="CancelarSesionConfirmado" method="post" novalidate>
                <div class="modal-header">
                    <h5 class="modal-title" id="cancelarModalADOS2Label"><i class="bi bi-exclamation-triangle-fill text-danger me-2"></i>Confirmar Cancelación</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <p>¿Estás seguro de que deseas cancelar la sesión ADOS-2 para el paciente <strong id="modalPacienteNombreCancelar"></strong>?</p>
                    <p class="text-muted small">Esta acción marcará la sesión como 'Cancelada'.</p>
                    <input type="hidden" name="sesionId" id="modalSesionIdCancelar" />
                    <div class="mb-3">
                        <label for="modalMotivoCancelacionCancelar" class="form-label fw-semibold">Motivo de la cancelación (requerido):</label>
                        <textarea class="form-control" id="modalMotivoCancelacionCancelar" name="motivoCancelacion" rows="3" required></textarea>
                        <div class="invalid-feedback">Por favor, ingrese un motivo para la cancelación.</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No, mantener</button>
                    <button type="submit" class="btn btn-danger">Sí, cancelar sesión</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="motivoCancelacionModal" tabindex="-1" aria-labelledby="motivoCancelacionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="motivoCancelacionModalLabel"><i class="bi bi-info-circle-fill text-info me-2"></i> Motivo de Cancelación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <p><strong>Paciente:</strong> <span id="motivoPacienteNombre"></span></p>
                <p><strong>Motivo:</strong></p>
                <p id="motivoCancelacionTexto" class="border p-3 bg-light rounded"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="motivoPausaModal" tabindex="-1" aria-labelledby="motivoPausaModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="motivoPausaModalLabel"><i class="bi bi-pause-circle-fill text-warning me-2"></i> Motivo de Pausa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <p><strong>Paciente:</strong> <span id="motivoPausaPacienteNombre"></span></p>
                <p><strong>Motivo:</strong></p>
                <p id="motivoPausaTexto" class="border p-3 bg-light rounded"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="pausarModalADOS2" tabindex="-1" aria-labelledby="pausarModalADOS2Label" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form id="formPausarSesionADOS2" asp-controller="Ados2" asp-action="PausarSesion" method="post" novalidate>
                <div class="modal-header">
                    <h5 class="modal-title" id="pausarModalADOS2Label"><i class="bi bi-pause-circle-fill text-warning me-2"></i>Confirmar Pausa</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <p>¿Estás seguro de que deseas pausar la sesión ADOS-2 para el paciente <strong id="modalPacienteNombrePausar"></strong>?</p>
                    <p class="text-muted small">Podrás reanudarla más tarde.</p>
                    <input type="hidden" name="id" id="modalSesionIdPausar" />
                    <div class="mb-3">
                        <label for="modalNotaPausa" class="form-label fw-semibold">Motivo de la pausa (requerido):</label>
                        <textarea class="form-control" id="modalNotaPausa" name="nota" rows="3" required></textarea>
                        <div class="invalid-feedback">Por favor, ingrese un motivo para la pausa.</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No, mantener</button>
                    <button type="submit" class="btn btn-warning">Sí, pausar sesión</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="agregarNotaModal" tabindex="-1" aria-labelledby="agregarNotaModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <form id="formAgregarNota" asp-controller="Ados2" asp-action="AgregarNotaGeneral" method="post" novalidate>
                <div class="modal-header">
                    <h5 class="modal-title" id="agregarNotaModalLabel"><i class="bi bi-journal-plus text-primary me-2"></i>Agregar Nota General</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <p>Agregar nota general para el paciente <strong id="modalPacienteNombreNota"></strong></p>
                    <input type="hidden" name="id" id="modalSesionIdNota" />
                    <div class="mb-3">
                        <label for="modalNotaGeneral" class="form-label fw-semibold">Nota General (requerida):</label>
                        <textarea class="form-control" id="modalNotaGeneral" name="notaGeneral" rows="6" required placeholder="Escribe aquí la nota general sobre la sesión..."></textarea>
                        <div class="invalid-feedback">Por favor, ingrese una nota general.</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Guardar Nota</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="verNotaModal" tabindex="-1" aria-labelledby="verNotaModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="verNotaModalLabel"><i class="bi bi-journal-text text-info me-2"></i> Nota General</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <p><strong>Paciente:</strong> <span id="verNotaPacienteNombre"></span></p>
                <p><strong>Nota General:</strong></p>
                <div id="verNotaTexto" class="border p-3 bg-light rounded" style="white-space: pre-wrap; min-height: 120px;"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const cancelarModal = document.getElementById('cancelarModalADOS2');
            if (cancelarModal) {
                const inputSesionIdCancelar = document.getElementById('modalSesionIdCancelar');
                const nombrePacienteCancelar = document.getElementById('modalPacienteNombreCancelar');
                const formCancelar = document.getElementById('formCancelarSesionADOS2');

                document.querySelectorAll('.action-btn[data-bs-target="#cancelarModalADOS2"]').forEach(btn => {
                    btn.addEventListener('click', function () {
                        const sesionId = this.getAttribute('data-sesionid');
                        const pacienteNombre = this.getAttribute('data-pacientenombre');
                        if (inputSesionIdCancelar) inputSesionIdCancelar.value = sesionId;
                        if (nombrePacienteCancelar) nombrePacienteCancelar.textContent = pacienteNombre;
                    });
                });

                if (formCancelar) {
                    formCancelar.addEventListener('submit', function (event) {
                        if (!formCancelar.checkValidity()) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        formCancelar.classList.add('was-validated');
                    });
                }
            }

            const motivoCancelacionModal = document.getElementById('motivoCancelacionModal');
            if (motivoCancelacionModal) {
                const nombrePacienteMotivo = document.getElementById('motivoPacienteNombre');
                const motivoTexto = document.getElementById('motivoCancelacionTexto');

                document.querySelectorAll('.action-btn[data-bs-target="#motivoCancelacionModal"]').forEach(btn => {
                    btn.addEventListener('click', function () {
                        const pacienteNombre = this.getAttribute('data-pacientenombre');
                        const motivoCancelacion = this.getAttribute('data-motivocancelacion');
                        if (nombrePacienteMotivo) nombrePacienteMotivo.textContent = pacienteNombre;
                        if (motivoTexto) motivoTexto.textContent = motivoCancelacion || "No se proporcionó un motivo.";
                    });
                });
            }

            var successMessage = '@Html.Raw(System.Text.Encodings.Web.JavaScriptEncoder.Default.Encode(TempData["SuccessMessage"] as string ?? ""))';
            var errorMessage = '@Html.Raw(System.Text.Encodings.Web.JavaScriptEncoder.Default.Encode(TempData["ErrorMessage"] as string ?? ""))';

            if (successMessage) {
                Swal.fire({
                    icon: 'success',
                    title: '¡Éxito!',
                    text: successMessage,
                    confirmButtonColor: 'var(--emind-primary)',
                    timer: 3000,
                    timerProgressBar: true,
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false
                });
            }

            if (errorMessage) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: errorMessage,
                    confirmButtonColor: 'var(--emind-danger)',
                    timer: 3000,
                    timerProgressBar: true,
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false
                });
            }
        });

        const pausarModal = document.getElementById('pausarModalADOS2');
        if (pausarModal) {
            const inputSesionIdPausar = document.getElementById('modalSesionIdPausar');
            const nombrePacientePausar = document.getElementById('modalPacienteNombrePausar');
            const formPausar = document.getElementById('formPausarSesionADOS2');

            document.querySelectorAll('.action-btn[data-bs-target="#pausarModalADOS2"]').forEach(btn => {
                btn.addEventListener('click', function () {
                    const sesionId = this.getAttribute('data-sesionid');
                    const pacienteNombre = this.getAttribute('data-pacientenombre');
                    if (inputSesionIdPausar) inputSesionIdPausar.value = sesionId;
                    if (nombrePacientePausar) nombrePacientePausar.textContent = pacienteNombre;
                });
            });

            if (formPausar) {
                formPausar.addEventListener('submit', function (event) {
                    if (!formPausar.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    formPausar.classList.add('was-validated');
                });
            }
        }


        const motivoPausaModal = document.getElementById('motivoPausaModal');
        if (motivoPausaModal) {
            const nombrePacienteMotivoPausa = document.getElementById('motivoPausaPacienteNombre');
            const motivoPausaTexto = document.getElementById('motivoPausaTexto');

            document.querySelectorAll('.action-btn[data-bs-target="#motivoPausaModal"]').forEach(btn => {
                btn.addEventListener('click', function () {
                    const pacienteNombre = this.getAttribute('data-pacientenombre');
                    const motivoPausa = this.getAttribute('data-motivopausa');
                    if (nombrePacienteMotivoPausa) nombrePacienteMotivoPausa.textContent = pacienteNombre;
                    if (motivoPausaTexto) motivoPausaTexto.textContent = motivoPausa || "No se proporcionó un motivo.";
                });
            });
        }

        const agregarNotaModal = document.getElementById('agregarNotaModal');
        if (agregarNotaModal) {
            const inputSesionIdNota = document.getElementById('modalSesionIdNota');
            const nombrePacienteNota = document.getElementById('modalPacienteNombreNota');
            const formAgregarNota = document.getElementById('formAgregarNota');

            document.querySelectorAll('.action-btn[data-bs-target="#agregarNotaModal"]').forEach(btn => {
                btn.addEventListener('click', function () {
                    const sesionId = this.getAttribute('data-sesionid');
                    const pacienteNombre = this.getAttribute('data-pacientenombre');
                    if (inputSesionIdNota) inputSesionIdNota.value = sesionId;
                    if (nombrePacienteNota) nombrePacienteNota.textContent = pacienteNombre;

                    const textarea = document.getElementById('modalNotaGeneral');
                    if (textarea) textarea.value = '';
                });
            });

            if (formAgregarNota) {
                formAgregarNota.addEventListener('submit', function (event) {
                    if (!formAgregarNota.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    formAgregarNota.classList.add('was-validated');
                });
            }
        }

        const verNotaModal = document.getElementById('verNotaModal');
        if (verNotaModal) {
            const nombrePacienteVerNota = document.getElementById('verNotaPacienteNombre');
            const verNotaTexto = document.getElementById('verNotaTexto');

            document.querySelectorAll('.action-btn[data-bs-target="#verNotaModal"]').forEach(btn => {
                btn.addEventListener('click', function () {
                    const pacienteNombre = this.getAttribute('data-pacientenombre');
                    const notaGeneral = this.getAttribute('data-notageneral');
                    if (nombrePacienteVerNota) nombrePacienteVerNota.textContent = pacienteNombre;
                    if (verNotaTexto) verNotaTexto.textContent = notaGeneral || "No hay nota general disponible.";
                });
            });
        }
    </script>
}