@model Sistema_Tea.Models.ADOS2_ResultadoGlobalSesion
@{
    ViewData["Title"] = "Resultado Global ADOS-2";
}
<link rel="stylesheet" href="~/css/InTest.css" asp-append-version="true" />

<div class="emind-list-container">
    <div class="emind-list-header">
        <h1><i class="bi bi-clipboard2-data-fill"></i> @ViewData["Title"]</h1>
        <a asp-controller="Ados2" asp-action="Index" class="btn emind-btn-primary">
            <i class="bi bi-arrow-left-circle-fill"></i> Volver a Sesiones
        </a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-emind alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-emind alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model == null)
    {
        <div class="text-center p-4 p-md-5 my-4 empty-state-container">
            <i class="bi bi-folder-x"></i>
            <h4 class="mt-3">No se encontraron resultados para esta sesión.</h4>
            <p>Puedes verificar la sesión o crear una nueva desde el listado de sesiones.</p>
            <a asp-controller="Ados2" asp-action="Index" class="btn emind-btn-primary mt-2">
                <i class="bi bi-arrow-left-circle-fill"></i> Volver al Listado
            </a>
        </div>
    }
    else
    {
        <div class="emind-table-wrapper">
            <div class="card p-3 mb-3">
                <h4><i class="bi bi-person-fill"></i> Datos de la Sesión</h4>
                <div class="d-flex flex-column">
                    @if (Model.ADOS2_Sesion != null && Model.ADOS2_Sesion.Paciente != null)
                    {
                        <div class="d-flex align-items-center mb-2">
                            <span class="avatar-initials" title="@Model.ADOS2_Sesion.Paciente.NombreCompleto">
                                @(!string.IsNullOrEmpty(Model.ADOS2_Sesion.Paciente.NombreCompleto) ? Model.ADOS2_Sesion.Paciente.NombreCompleto.Substring(0, 2).ToUpper() : "P")
                            </span>
                            <div>
                                <span class="data-main text-truncate-custom" title="@Model.ADOS2_Sesion.Paciente.NombreCompleto"><strong>Paciente:</strong> @Model.ADOS2_Sesion.Paciente.NombreCompleto</span>
                            </div>
                        </div>
                    }
                    else
                    {
                        <p><strong>Paciente:</strong> No disponible</p>
                    }

                    @if (Model.ADOS2_Sesion != null && Model.ADOS2_Sesion.Psicologo != null)
                    {
                        <div class="d-flex align-items-center mb-2">
                            <span class="avatar-initials" title="@Model.ADOS2_Sesion.Psicologo.NombreCompleto">
                                @(!string.IsNullOrEmpty(Model.ADOS2_Sesion.Psicologo.NombreCompleto) ? Model.ADOS2_Sesion.Psicologo.NombreCompleto.Substring(0, 2).ToUpper() : "Psi")
                            </span>
                            <div>
                                <span class="data-main text-truncate-custom" title="@Model.ADOS2_Sesion.Psicologo.NombreCompleto"><strong>Psicólogo:</strong> @Model.ADOS2_Sesion.Psicologo.NombreCompleto</span>
                            </div>
                        </div>
                    }
                    else
                    {
                        <p><strong>Psicólogo:</strong> No disponible</p>
                    }

                    <p><strong>Fecha de cálculo:</strong> @Model.FechaCalculo.ToString("dd/MM/yyyy HH:mm")</p>
                </div>
            </div>

            <div class="card p-3 mb-3">
                <h4><i class="bi bi-bar-chart-fill"></i> Resultados por Dominio</h4>
                <ul class="list-unstyled">
                    <li><strong>Afecto Social:</strong> @Model.AfectoSocial_PuntuacionTotal</li>
                    <li><strong>Comunicación:</strong> @Model.Comunicacion_PuntuacionTotal</li>
                    <li><strong>Interacción Social:</strong> @Model.InteraccionSocial_PuntuacionTotal</li>
                    <li><strong>Comportamiento Repetitivo:</strong> @Model.ComportamientoRepetitivo_PuntuacionTotal</li>
                    <li><strong>Otros Dominios:</strong> @Model.OtrosDominios_PuntuacionTotal</li>
                </ul>
            </div>

            <div class="card p-3 mb-3">
                <h4><i class="bi bi-clipboard-check-fill"></i> Puntaje Total y Diagnóstico</h4>
                <p><strong>Puntaje Total:</strong> @Model.PuntuacionTotalAlgoritmo</p>
                <p>
                    <strong>Clasificación ADOS:</strong>
                    <span class="badge-status badge-status-@(Model.ClasificacionADOS.ToLower().Replace(" ", ""))">
                        @System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(Model.ClasificacionADOS.ToLower())
                    </span>
                </p>
            </div>

            <div class="card p-3 mb-3">
                <h4><i class="bi bi-graph-up"></i> Calibrated Severity Scores (CSS)</h4>
                <ul class="list-unstyled">
                    <li><strong>Total General:</strong> @Model.CSS_TotalGeneral</li>
                    <li><strong>Afecto Social:</strong> @Model.CSS_AfectoSocial</li>
                    <li><strong>Comportamiento Repetitivo:</strong> @Model.CSS_ComportamientoRepetitivo</li>
                </ul>
            </div>

            <div class="card p-3 mb-3">
                <h4><i class="bi bi-journal-text"></i> Notas del Resultado Global</h4>
                @if (string.IsNullOrWhiteSpace(Model.NotasResultadoGlobal))
                {
                    <form asp-action="GuardarNotasResultadoGlobal" method="post" id="formNotasGenerales" novalidate>
                        <input type="hidden" asp-for="SesionID" />
                        <textarea class="form-control" asp-for="NotasResultadoGlobal" rows="5" placeholder="Agregar notas aquí..." required></textarea>
                        <div class="invalid-feedback">Por favor, ingrese una nota general.</div>
                        <button type="submit" class="btn emind-btn-primary mt-2">
                            <i class="bi bi-save-fill"></i> Guardar Notas
                        </button>
                    </form>
                }
                else
                {
                    <div class="border p-3 bg-light rounded" style="white-space: pre-wrap; min-height: 120px;">
                        @Model.NotasResultadoGlobal
                    </div>
                }
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var successMessage = '@Html.Raw(System.Text.Encodings.Web.JavaScriptEncoder.Default.Encode(TempData["SuccessMessage"] as string ?? ""))';
            var errorMessage = '@Html.Raw(System.Text.Encodings.Web.JavaScriptEncoder.Default.Encode(TempData["ErrorMessage"] as string ?? ""))';

            if (successMessage) {
                Swal.fire({
                    icon: 'success',
                    title: '¡Éxito!',
                    text: successMessage,
                    confirmButtonColor: 'var(--emind-primary)',
                    timer: 3000,
                    timerProgressBar: true,
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false
                });
            }

            if (errorMessage) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: errorMessage,
                    confirmButtonColor: 'var(--emind-danger)',
                    timer: 3000,
                    timerProgressBar: true,
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false
                });
            }

            const formNotas = document.getElementById('formNotasGenerales');
            if (formNotas) {
                formNotas.addEventListener('submit', function (event) {
                    if (!formNotas.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    formNotas.classList.add('was-validated');
                });
            }
        });
    </script>
}