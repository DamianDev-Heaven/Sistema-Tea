@model Sistema_Tea.Models.ADOS2_Sesion
@{
    ViewData["Title"] = "Nueva Sesión ADOS-2";
}

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css" />
    <style>
        /* 1. Fondo y fuente base */
        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            font-family: 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', sans-serif;
        }

        /* 2. Contenedor principal con efecto cristal */
        .glass-container {
            max-width: 720px;
            margin: 3rem auto;
            background: rgba(255, 255, 255, 0.65);
            backdrop-filter: blur(12px) saturate(180%);
            -webkit-backdrop-filter: blur(12px) saturate(180%);
            border-radius: 20px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.15);
            padding: 2.5rem 3.5rem;
        }

        /* 3. Encabezado del formulario */
        .form-heading {
            font-weight: 700;
            color: #1c2a4d;
            border-bottom: 1px solid rgba(0,0,0,0.1);
            padding-bottom: 1.25rem;
            margin-bottom: 2.5rem;
        }

        /* 4. Lógica de animación progresiva (sin cambios, es perfecta) */
        .form-section {
            opacity: 0.5;
            transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
            transform: translateY(10px);
            pointer-events: none;
        }

            .form-section.active {
                opacity: 1;
                transform: translateY(0);
                pointer-events: all;
            }

        /* 5. Estilos para los campos del formulario */
        .form-label-modern {
            font-weight: 600;
            color: #344061;
            margin-bottom: 0.5rem;
        }

        .form-control, .form-select {
            border-radius: 10px;
            border: 1px solid #ced4da;
            background-color: rgba(255,255,255,0.4);
            transition: border-color 0.2s ease, box-shadow 0.2s ease;
        }

            .form-control:focus, .form-select:focus {
                border-color: #86b7fe;
                box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
                background-color: white;
            }

        .form-floating > label {
            color: #6c757d;
        }

        /* 6. Integración de diseño con Choices.js */
        .choices__inner {
            background-color: rgba(255,255,255,0.4);
            border: 1px solid #ced4da;
            padding: .55rem 1rem;
            font-size: 1rem;
            border-radius: 10px;
            min-height: auto;
        }

        .choices.is-focused .choices__inner {
            border-color: #86b7fe;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }

        .choices__list--dropdown {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(5px);
            border-radius: 10px;
            border-color: #ced4da;
        }

        .choices__item--choice {
            transition: background-color 0.2s ease;
        }

            .choices__item--choice.is-highlighted {
                background-color: rgba(13, 110, 253, 0.15);
            }

        /* 7. Botones de Acción */
        .btn-primary {
            background: linear-gradient(45deg, #0d6efd, #0d9efd);
            border: none;
            font-weight: 600;
        }
    </style>
}

<div class="container my-5">
    <div class="glass-container">
        <h2 class="form-heading">
            <i class="bi bi-clipboard2-plus-fill me-2"></i>@ViewData["Title"]
        </h2>

        <form asp-action="CrearSesion" method="post" novalidate>

            <div class="mb-4">
                <label for="PacienteID" class="form-label-modern">1. Seleccione el Paciente</label>
                <select asp-for="PacienteID" asp-items="ViewBag.Pacientes"></select>
                <span asp-validation-for="PacienteID" class="text-danger mt-1 d-block"></span>
            </div>

            <div id="session-details-section" class="form-section">
                <div class="mb-4">
                    <label for="Modulo" class="form-label-modern">2. Elija el Módulo</label>
                    <div id="module-helper" class="form-text text-muted mb-2"></div>
                    <div class="form-floating">
                        <select asp-for="Modulo" class="form-select">
                            <option value="">Seleccione una opción</option>
                            <option value="T">Módulo T (12-30 meses)</option>
                            <option value="1">Módulo 1 (Pre-verbal / Palabras sueltas)</option>
                            <option value="2">Módulo 2 (Habla con frases)</option>
                            <option value="3">Módulo 3 (Lenguaje fluido - Niños/Adolescentes)</option>
                            <option value="4">Módulo 4 (Lenguaje fluido - Adolescentes mayores/Adultos)</option>
                        </select>
                        <label asp-for="Modulo">Módulo a Aplicar</label>
                        <span asp-validation-for="Modulo" class="text-danger mt-1 d-block"></span>
                    </div>
                </div>

                <div class="mb-4">
                    <div class="form-floating">
                        <input asp-for="EdadEvaluacionMeses" class="form-control" type="text" readonly placeholder="Edad en Meses" />
                        <label asp-for="EdadEvaluacionMeses">Edad del Paciente (en meses)</label>
                    </div>
                </div>
            </div>

            <hr class="my-4" />

            <div class="d-flex justify-content-end gap-2">
                <a asp-action="Index" class="btn btn-outline-secondary rounded-pill px-4">Cancelar</a>
                <button type="submit" class="btn btn-primary rounded-pill px-4">Crear Sesión</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // --- CONFIGURACIÓN ---
            const pacienteSelectElement = document.getElementById('PacienteID');
            const sessionDetailsSection = document.getElementById('session-details-section');
            const moduloSelect = document.getElementById('Modulo');
            const edadInput = document.getElementById('EdadEvaluacionMeses');
            const moduleHelper = document.getElementById('module-helper');

            // Inicializamos el buscador de pacientes
            const choices = new Choices(pacienteSelectElement, {
                searchPlaceholderValue: 'Escribe para buscar...',
                itemSelectText: 'Seleccionar',
                placeholder: true,
                placeholderValue: '-- Busca un paciente --',
                allowHTML: false
            });

            // --- LÓGICA DE INTERACCIÓN ---
            pacienteSelectElement.addEventListener('change', async function (event) {
                const pacienteId = event.target.value;

                if (!pacienteId) {
                    sessionDetailsSection.classList.remove('active');
                    return;
                }

                try {
                    const response = await fetch(`/Ados2/ObtenerEdadYModulos?pacienteId=${pacienteId}`);
                    if (!response.ok) throw new Error('Error al contactar al servidor.');

                    const data = await response.json();
                    if (data.error) throw new Error(data.error);

                    edadInput.value = data.edadMeses;
                    moduleHelper.innerHTML = `<i class="bi bi-lightbulb-fill me-1"></i>Módulos recomendados para esta edad: <strong>${data.modulos.join(', ')}</strong>.`;

                    Array.from(moduloSelect.options).forEach(option => {
                        if (option.value) {
                                option.disabled = !data.modulos.includes(option.value);
                        }
                    });

                    if(moduloSelect.options[moduloSelect.selectedIndex]?.disabled){
                        moduloSelect.value = "";
                    }

                    sessionDetailsSection.classList.add('active');

                } catch (error) {
                    console.error("Error:", error);
                    alert(error.message);
                    sessionDetailsSection.classList.remove('active');
                }
            });
        });
    </script>
}